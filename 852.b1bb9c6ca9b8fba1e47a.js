(self.webpackChunkprojectquery=self.webpackChunkprojectquery||[]).push([[852,181],{64063:e=>{"use strict";e.exports=function e(t,r){if(t===r)return!0;if(t&&r&&"object"==typeof t&&"object"==typeof r){if(t.constructor!==r.constructor)return!1;var n,a,s;if(Array.isArray(t)){if((n=t.length)!=r.length)return!1;for(a=n;0!=a--;)if(!e(t[a],r[a]))return!1;return!0}if(t.constructor===RegExp)return t.source===r.source&&t.flags===r.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===r.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===r.toString();if((n=(s=Object.keys(t)).length)!==Object.keys(r).length)return!1;for(a=n;0!=a--;)if(!Object.prototype.hasOwnProperty.call(r,s[a]))return!1;for(a=n;0!=a--;){var p=s[a];if(!e(t[p],r[p]))return!1}return!0}return t!=t&&r!=r}},35717:e=>{"function"==typeof Object.create?e.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:e.exports=function(e,t){if(t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}}},34155:e=>{var t,r,n=e.exports={};function a(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function p(e){if(t===setTimeout)return setTimeout(e,0);if((t===a||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(r){try{return t.call(null,e,0)}catch(r){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:a}catch(e){t=a}try{r="function"==typeof clearTimeout?clearTimeout:s}catch(e){r=s}}();var i,o=[],u=!1,c=-1;function l(){u&&i&&(u=!1,i.length?o=i.concat(o):c=-1,o.length&&y())}function y(){if(!u){var e=p(l);u=!0;for(var t=o.length;t;){for(i=o,o=[];++c<t;)i&&i[c].run();c=-1,t=o.length}i=null,u=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===s||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function f(e,t){this.fun=e,this.array=t}function d(){}n.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];o.push(new f(e,t)),1!==o.length||u||p(y)},f.prototype.run=function(){this.fun.apply(null,this.array)},n.title="browser",n.browser=!0,n.env={},n.argv=[],n.version="",n.versions={},n.on=d,n.addListener=d,n.once=d,n.off=d,n.removeListener=d,n.removeAllListeners=d,n.emit=d,n.prependListener=d,n.prependOnceListener=d,n.listeners=function(e){return[]},n.binding=function(e){throw new Error("process.binding is not supported")},n.cwd=function(){return"/"},n.chdir=function(e){throw new Error("process.chdir is not supported")},n.umask=function(){return 0}},41640:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),a(r(7970),t),a(r(37498),t),a(r(16381),t),a(r(72808),t),a(r(92016),t),a(r(63387),t),a(r(71573),t)},7970:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BlankNode=void 0,t.BlankNode=class{constructor(e){this.termType="BlankNode",this.value=e}equals(e){return!!e&&"BlankNode"===e.termType&&e.value===this.value}}},37498:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DataFactory=void 0;const n=r(7970),a=r(16381),s=r(72808),p=r(92016),i=r(63387),o=r(71573);let u=0;t.DataFactory=class{constructor(e){this.blankNodeCounter=0,e=e||{},this.blankNodePrefix=e.blankNodePrefix||`df_${u++}_`}namedNode(e){return new p.NamedNode(e)}blankNode(e){return new n.BlankNode(e||`${this.blankNodePrefix}${this.blankNodeCounter++}`)}literal(e,t){return new s.Literal(e,t)}variable(e){return new o.Variable(e)}defaultGraph(){return a.DefaultGraph.INSTANCE}quad(e,t,r,n){return new i.Quad(e,t,r,n||this.defaultGraph())}fromTerm(e){switch(e.termType){case"NamedNode":return this.namedNode(e.value);case"BlankNode":return this.blankNode(e.value);case"Literal":return e.language?this.literal(e.value,e.language):e.datatype.equals(s.Literal.XSD_STRING)?this.literal(e.value):this.literal(e.value,this.fromTerm(e.datatype));case"Variable":return this.variable(e.value);case"DefaultGraph":return this.defaultGraph();case"Quad":return this.quad(this.fromTerm(e.subject),this.fromTerm(e.predicate),this.fromTerm(e.object),this.fromTerm(e.graph))}}fromQuad(e){return this.fromTerm(e)}resetBlankNodeCounter(){this.blankNodeCounter=0}}},16381:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DefaultGraph=void 0;class r{constructor(){this.termType="DefaultGraph",this.value=""}equals(e){return!!e&&"DefaultGraph"===e.termType}}t.DefaultGraph=r,r.INSTANCE=new r},72808:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Literal=void 0;const n=r(92016);class a{constructor(e,t){this.termType="Literal",this.value=e,"string"==typeof t?(this.language=t,this.datatype=a.RDF_LANGUAGE_STRING):t?(this.language="",this.datatype=t):(this.language="",this.datatype=a.XSD_STRING)}equals(e){return!!e&&"Literal"===e.termType&&e.value===this.value&&e.language===this.language&&e.datatype.equals(this.datatype)}}t.Literal=a,a.RDF_LANGUAGE_STRING=new n.NamedNode("http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"),a.XSD_STRING=new n.NamedNode("http://www.w3.org/2001/XMLSchema#string")},92016:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.NamedNode=void 0,t.NamedNode=class{constructor(e){this.termType="NamedNode",this.value=e}equals(e){return!!e&&"NamedNode"===e.termType&&e.value===this.value}}},63387:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Quad=void 0,t.Quad=class{constructor(e,t,r,n){this.termType="Quad",this.value="",this.subject=e,this.predicate=t,this.object=r,this.graph=n}equals(e){return!!e&&("Quad"===e.termType||!e.termType)&&this.subject.equals(e.subject)&&this.predicate.equals(e.predicate)&&this.object.equals(e.object)&&this.graph.equals(e.graph)}}},71573:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Variable=void 0,t.Variable=class{constructor(e){this.termType="Variable",this.value=e}equals(e){return!!e&&"Variable"===e.termType&&e.value===this.value}}},76065:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),a(r(64542),t)},64542:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isTermGrounded=t.termToSignature=t.quadToSignature=t.sha1hex=t.hashTerm=t.hashTerms=t.getGraphBlankNodes=t.uniqGraph=t.deindexGraph=t.indexGraph=t.getQuadsWithoutBlankNodes=t.getQuadsWithBlankNodes=t.hasValue=t.hashValues=t.getBijectionInner=t.getBijection=t.isomorphic=void 0;const n=r(33715),a=r(22086),s=r(40675);function p(e,t){const r=f(y(e)),n=f(y(t));if(Object.keys(r).length!==Object.keys(n).length)return null;for(const e in r)if(r[e]!==n[e])return null;return i(h(l(e)),h(l(t)),g(e),g(t))}function i(e,t,r,n,s,p){s||(s={}),p||(p={});const[l,y]=m(e,r,s),[f,d]=m(t,n,p);if(Object.keys(l).length!==Object.keys(f).length)return null;for(const e in l)if(!c(f,l[e]))return null;let h={};for(const e of r){const t=a.termToString(e),r=y[t];for(const e in d)if(d[e]===r){h[t]=e,delete d[e];break}}if(!o(Object.keys(h).sort(),r.map(a.termToString).sort())||!o(u(h).sort(),n.map(a.termToString).sort())){h=null;for(const s of r){const p=a.termToString(s);if(!l[p])for(const s of n){const o=a.termToString(s);if(!f[o]&&y[p]===d[o]){const a=b(p);h=i(e,t,r,n,Object.assign(Object.assign({},l),{[p]:a}),Object.assign(Object.assign({},f),{[o]:a}))}}}}return h}function o(e,t){if(e.length!==t.length)return!1;for(let r=e.length;r--;)if(e[r]!==t[r])return!1;return!0}function u(e){const t=[];for(const r in e)t.push(e[r]);return t}function c(e,t){for(const r in e)if(e[r]===t)return!0;return!1}function l(e){return e.filter((e=>s.someTerms(e,(e=>"BlankNode"===e.termType||"Quad"===e.termType&&s.getTermsNested(e).some((e=>"BlankNode"===e.termType))))))}function y(e){return e.filter((e=>s.everyTerms(e,(e=>"BlankNode"!==e.termType&&!("Quad"===e.termType&&s.getTermsNested(e).some((e=>"BlankNode"===e.termType)))))))}function f(e){const t={};for(const r of e)t[JSON.stringify(a.quadToStringQuad(r))]=!0;return t}function d(e){return Object.keys(e).map((e=>a.stringQuadToQuad(JSON.parse(e))))}function h(e){return d(f(e))}function g(e){return s.uniqTerms(e.map((e=>s.getBlankNodes(s.getTermsNested(e)))).reduce(((e,t)=>e.concat(t)),[]))}function m(e,t,r){const n=Object.assign({},r),s={};let p=!0;for(;p;){const r=Object.keys(n).length;for(const r of t){const t=a.termToString(r);if(!n[t]){const[a,p]=T(r,e,n);a&&(n[t]=p),s[t]=p}}const i={};for(const e in s){const t=s[e];void 0===i[t]?i[t]=e:i[t]=!1}for(const e in i){const t=i[e];t&&(n[t]=e)}p=r!==Object.keys(n).length}return[n,s]}function T(e,t,r){const n=[];let a=!0;for(const p of t){const t=s.getTermsNested(p);if(t.some((t=>t.equals(e)))){n.push(E(p,r,e));for(const n of t)N(n,r)||n.equals(e)||(a=!1)}}return[a,b(n.sort().join(""))]}function b(e){return n.sha1().update(e).digest("hex")}function E(e,t,r){return s.getTerms(e).map((e=>O(e,t,r))).join("|")}function O(e,t,r){return e.equals(r)?"@self":"BlankNode"===e.termType?t[a.termToString(e)]||"@blank":"Quad"===e.termType?`<${E(e,t,r)}>`:a.termToString(e)}function N(e,t){return"BlankNode"!==e.termType&&!("Quad"===e.termType&&s.getTermsNested(e).some((e=>!N(e,t))))||!!t[a.termToString(e)]}t.isomorphic=function(e,t){return!!p(e,t)},t.getBijection=p,t.getBijectionInner=i,t.hashValues=u,t.hasValue=c,t.getQuadsWithBlankNodes=l,t.getQuadsWithoutBlankNodes=y,t.indexGraph=f,t.deindexGraph=d,t.uniqGraph=h,t.getGraphBlankNodes=g,t.hashTerms=m,t.hashTerm=T,t.sha1hex=b,t.quadToSignature=E,t.termToSignature=O,t.isTermGrounded=N},40675:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TRIPLE_TERM_NAMES=t.someTerms=t.everyTerms=t.reduceTerms=t.mapTerms=t.filterQuadTermNames=t.filterTerms=t.forEachTerms=t.collectNamedTerms=t.getNamedTerms=t.getTermsNested=t.getTerms=t.QUAD_TERM_NAMES=t.matchPatternComplete=t.matchPattern=t.getDefaultGraphs=t.getVariables=t.getLiterals=t.getBlankNodes=t.getNamedNodes=t.getTermsOfType=t.uniqTerms=t.TERM_TYPES=void 0;const n=r(66010);Object.defineProperty(t,"collectNamedTerms",{enumerable:!0,get:function(){return n.collectNamedTerms}}),Object.defineProperty(t,"everyTerms",{enumerable:!0,get:function(){return n.everyTerms}}),Object.defineProperty(t,"filterQuadTermNames",{enumerable:!0,get:function(){return n.filterQuadTermNames}}),Object.defineProperty(t,"filterTerms",{enumerable:!0,get:function(){return n.filterTerms}}),Object.defineProperty(t,"forEachTerms",{enumerable:!0,get:function(){return n.forEachTerms}}),Object.defineProperty(t,"getNamedTerms",{enumerable:!0,get:function(){return n.getNamedTerms}}),Object.defineProperty(t,"getTerms",{enumerable:!0,get:function(){return n.getTerms}}),Object.defineProperty(t,"getTermsNested",{enumerable:!0,get:function(){return n.getTermsNested}}),Object.defineProperty(t,"mapTerms",{enumerable:!0,get:function(){return n.mapTerms}}),Object.defineProperty(t,"matchPattern",{enumerable:!0,get:function(){return n.matchPattern}}),Object.defineProperty(t,"matchPatternComplete",{enumerable:!0,get:function(){return n.matchPatternComplete}}),Object.defineProperty(t,"QUAD_TERM_NAMES",{enumerable:!0,get:function(){return n.QUAD_TERM_NAMES}}),Object.defineProperty(t,"reduceTerms",{enumerable:!0,get:function(){return n.reduceTerms}}),Object.defineProperty(t,"someTerms",{enumerable:!0,get:function(){return n.someTerms}}),Object.defineProperty(t,"TRIPLE_TERM_NAMES",{enumerable:!0,get:function(){return n.TRIPLE_TERM_NAMES}});const a=r(61502);Object.defineProperty(t,"getBlankNodes",{enumerable:!0,get:function(){return a.getBlankNodes}}),Object.defineProperty(t,"getDefaultGraphs",{enumerable:!0,get:function(){return a.getDefaultGraphs}}),Object.defineProperty(t,"getLiterals",{enumerable:!0,get:function(){return a.getLiterals}}),Object.defineProperty(t,"getNamedNodes",{enumerable:!0,get:function(){return a.getNamedNodes}}),Object.defineProperty(t,"getTermsOfType",{enumerable:!0,get:function(){return a.getTermsOfType}}),Object.defineProperty(t,"getVariables",{enumerable:!0,get:function(){return a.getVariables}}),Object.defineProperty(t,"TERM_TYPES",{enumerable:!0,get:function(){return a.TERM_TYPES}}),Object.defineProperty(t,"uniqTerms",{enumerable:!0,get:function(){return a.uniqTerms}})},66010:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.matchPatternComplete=t.matchPattern=t.matchTerm=t.someTerms=t.everyTerms=t.reduceTerms=t.mapTerms=t.filterQuadTermNames=t.filterTerms=t.forEachTerms=t.collectNamedTerms=t.getNamedTerms=t.getTermsNested=t.getTerms=t.TRIPLE_TERM_NAMES=t.QUAD_TERM_NAMES=void 0;const n=new(r(41640).DataFactory);function a(e,t){return t&&"DefaultGraph"===e.graph.termType?[e.subject,e.predicate,e.object]:[e.subject,e.predicate,e.object,e.graph]}function s(e,t){return!t||"Variable"===t.termType||"Quad"===t.termType&&"Quad"===e.termType&&i(e,t)||t.equals(e)}function p(e,t,r,n,a){return s(e.subject,t)&&s(e.predicate,r)&&s(e.object,n)&&s(e.graph,a)}function i(e,t){return p(e,t.subject,t.predicate,t.object,t.graph)}t.QUAD_TERM_NAMES=["subject","predicate","object","graph"],t.TRIPLE_TERM_NAMES=["subject","predicate","object"],t.getTerms=a,t.getTermsNested=function e(t,r){const n=[];for(const s of a(t,r))"Quad"===s.termType?e(s,r).forEach((e=>n.push(e))):n.push(s);return n},t.getNamedTerms=function(e){return[{key:"subject",value:e.subject},{key:"predicate",value:e.predicate},{key:"object",value:e.object},{key:"graph",value:e.graph}]},t.collectNamedTerms=function(e,t,r){const a={};return e.forEach((e=>a[e.key]=e.value)),t&&(a.subject=a.subject||t("subject"),a.predicate=a.predicate||t("predicate"),a.object=a.object||t("object"),a.graph=a.graph||t("graph")),(r||n).quad(a.subject,a.predicate,a.object,a.graph)},t.forEachTerms=function(e,t){t(e.subject,"subject"),t(e.predicate,"predicate"),t(e.object,"object"),t(e.graph,"graph")},t.filterTerms=function(e,t){const r=[];return t(e.subject,"subject")&&r.push(e.subject),t(e.predicate,"predicate")&&r.push(e.predicate),t(e.object,"object")&&r.push(e.object),t(e.graph,"graph")&&r.push(e.graph),r},t.filterQuadTermNames=function(e,t){const r=[];return t(e.subject,"subject")&&r.push("subject"),t(e.predicate,"predicate")&&r.push("predicate"),t(e.object,"object")&&r.push("object"),t(e.graph,"graph")&&r.push("graph"),r},t.mapTerms=function(e,t,r){return(r||n).quad(t(e.subject,"subject"),t(e.predicate,"predicate"),t(e.object,"object"),t(e.graph,"graph"))},t.reduceTerms=function(e,t,r){let n=r;return n=t(n,e.subject,"subject"),n=t(n,e.predicate,"predicate"),n=t(n,e.object,"object"),t(n,e.graph,"graph")},t.everyTerms=function(e,t){return t(e.subject,"subject")&&t(e.predicate,"predicate")&&t(e.object,"object")&&t(e.graph,"graph")},t.someTerms=function(e,t){return t(e.subject,"subject")||t(e.predicate,"predicate")||t(e.object,"object")||t(e.graph,"graph")},t.matchTerm=s,t.matchPattern=p,t.matchPatternComplete=i},61502:(e,t,r)=>{"use strict";function n(e,t){return e.filter((e=>e.termType===t))}Object.defineProperty(t,"__esModule",{value:!0}),t.getQuads=t.getDefaultGraphs=t.getVariables=t.getLiterals=t.getBlankNodes=t.getNamedNodes=t.getTermsOfType=t.uniqTerms=t.TERM_TYPES=void 0,t.TERM_TYPES=["NamedNode","BlankNode","Literal","Variable","DefaultGraph","Quad"],t.uniqTerms=function(e){return r(35920)(e,((e,t)=>e.equals(t)))},t.getTermsOfType=n,t.getNamedNodes=function(e){return n(e,"NamedNode")},t.getBlankNodes=function(e){return n(e,"BlankNode")},t.getLiterals=function(e){return n(e,"Literal")},t.getVariables=function(e){return n(e,"Variable")},t.getDefaultGraphs=function(e){return n(e,"DefaultGraph")},t.getQuads=function(e){return n(e,"Quad")}},21938:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Util=t.toSparqlJs=t.toSparql=t.Factory=t.Algebra=t.translate=void 0;const n=r(11183);t.translate=n.default;const a=r(90250);t.Algebra=a;const s=r(99969);t.Factory=s.default;const p=r(76693);Object.defineProperty(t,"toSparql",{enumerable:!0,get:function(){return p.toSparql}}),Object.defineProperty(t,"toSparqlJs",{enumerable:!0,get:function(){return p.toSparqlJs}});const i=r(14101);t.Util=i.default},90250:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.expressionTypes=t.types=void 0,t.types={ALT:"alt",ASK:"ask",BGP:"bgp",CONSTRUCT:"construct",DESC:"desc",DESCRIBE:"describe",DISTINCT:"distinct",EXPRESSION:"expression",EXTEND:"extend",FILTER:"filter",FROM:"from",GRAPH:"graph",GROUP:"group",INV:"inv",JOIN:"join",LEFT_JOIN:"leftjoin",LINK:"link",MINUS:"minus",NOP:"nop",NPS:"nps",ONE_OR_MORE_PATH:"OneOrMorePath",ORDER_BY:"orderby",PATH:"path",PATTERN:"pattern",PROJECT:"project",REDUCED:"reduced",SEQ:"seq",SERVICE:"service",SLICE:"slice",UNION:"union",VALUES:"values",ZERO_OR_MORE_PATH:"ZeroOrMorePath",ZERO_OR_ONE_PATH:"ZeroOrOnePath",COMPOSITE_UPDATE:"compositeupdate",DELETE_INSERT:"deleteinsert",LOAD:"load",CLEAR:"clear",CREATE:"create",DROP:"drop",ADD:"add",MOVE:"move",COPY:"copy"},t.expressionTypes={AGGREGATE:"aggregate",EXISTENCE:"existence",NAMED:"named",OPERATOR:"operator",TERM:"term",WILDCARD:"wildcard"}},99969:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(90250),a=r(41640),s=r(22086),p=r(9619);t.default=class{constructor(e){this.dataFactory=e||new a.DataFactory,this.stringType=this.createTerm("http://www.w3.org/2001/XMLSchema#string")}createAlt(e,t){return{type:n.types.ALT,left:e,right:t}}createAsk(e){return{type:n.types.ASK,input:e}}createBoundAggregate(e,t,r,n,a){let s=this.createAggregateExpression(t,r,n,a);return s.variable=e,s}createBgp(e){return{type:n.types.BGP,patterns:e}}createConstruct(e,t){return{type:n.types.CONSTRUCT,input:e,template:t}}createDescribe(e,t){return{type:n.types.DESCRIBE,input:e,terms:t}}createDistinct(e){return{type:n.types.DISTINCT,input:e}}createExtend(e,t,r){return{type:n.types.EXTEND,input:e,variable:t,expression:r}}createFrom(e,t,r){return{type:n.types.FROM,input:e,default:t,named:r}}createFilter(e,t){return{type:n.types.FILTER,input:e,expression:t}}createGraph(e,t){return{type:n.types.GRAPH,input:e,name:t}}createGroup(e,t,r){return{type:n.types.GROUP,input:e,variables:t,aggregates:r}}createInv(e){return{type:n.types.INV,path:e}}createJoin(e,t){return{type:n.types.JOIN,left:e,right:t}}createLeftJoin(e,t,r){return r?{type:n.types.LEFT_JOIN,left:e,right:t,expression:r}:{type:n.types.LEFT_JOIN,left:e,right:t}}createLink(e){return{type:n.types.LINK,iri:e}}createMinus(e,t){return{type:n.types.MINUS,left:e,right:t}}createNop(){return{type:n.types.NOP}}createNps(e){return{type:n.types.NPS,iris:e}}createOneOrMorePath(e){return{type:n.types.ONE_OR_MORE_PATH,path:e}}createOrderBy(e,t){return{type:n.types.ORDER_BY,input:e,expressions:t}}createPath(e,t,r,a){return a?{type:n.types.PATH,subject:e,predicate:t,object:r,graph:a}:{type:n.types.PATH,subject:e,predicate:t,object:r,graph:this.dataFactory.defaultGraph()}}createPattern(e,t,r,a){let s=this.dataFactory.quad(e,t,r,a);return s.type=n.types.PATTERN,s}createProject(e,t){return{type:n.types.PROJECT,input:e,variables:t}}createReduced(e){return{type:n.types.REDUCED,input:e}}createSeq(e,t){return{type:n.types.SEQ,left:e,right:t}}createService(e,t,r){return{type:n.types.SERVICE,input:e,name:t,silent:r}}createSlice(e,t,r){return t=t||0,void 0!==r?{type:n.types.SLICE,input:e,start:t,length:r}:{type:n.types.SLICE,input:e,start:t}}createUnion(e,t){return{type:n.types.UNION,left:e,right:t}}createValues(e,t){return{type:n.types.VALUES,variables:e,bindings:t}}createZeroOrMorePath(e){return{type:n.types.ZERO_OR_MORE_PATH,path:e}}createZeroOrOnePath(e){return{type:n.types.ZERO_OR_ONE_PATH,path:e}}createAggregateExpression(e,t,r,a){return a?{type:n.types.EXPRESSION,expressionType:n.expressionTypes.AGGREGATE,aggregator:e,expression:t,separator:a,distinct:r}:{type:n.types.EXPRESSION,expressionType:n.expressionTypes.AGGREGATE,aggregator:e,expression:t,distinct:r}}createExistenceExpression(e,t){return{type:n.types.EXPRESSION,expressionType:n.expressionTypes.EXISTENCE,not:e,input:t}}createNamedExpression(e,t){return{type:n.types.EXPRESSION,expressionType:n.expressionTypes.NAMED,name:e,args:t}}createOperatorExpression(e,t){return{type:n.types.EXPRESSION,expressionType:n.expressionTypes.OPERATOR,operator:e,args:t}}createTermExpression(e){return{type:n.types.EXPRESSION,expressionType:n.expressionTypes.TERM,term:e}}createWildcardExpression(){return{type:n.types.EXPRESSION,expressionType:n.expressionTypes.WILDCARD,wildcard:new p.Wildcard}}createTerm(e){return s.stringToTerm(e,this.dataFactory)}createCompositeUpdate(e){return{type:n.types.COMPOSITE_UPDATE,updates:e}}createDeleteInsert(e,t,r){const a={type:n.types.DELETE_INSERT};return e&&(a.delete=e),t&&(a.insert=t),r&&(a.where=r),a}createLoad(e,t,r){const a={type:n.types.LOAD,source:e};return t&&(a.destination=t),this.addSilent(a,r)}createClear(e,t){return this.addSilent({type:n.types.CLEAR,source:e},t)}createCreate(e,t){return this.addSilent({type:n.types.CREATE,source:e},t)}createDrop(e,t){return this.addSilent({type:n.types.DROP,source:e},t)}createAdd(e,t,r){return this.addSilent({type:n.types.ADD,source:e,destination:t},r)}createMove(e,t,r){return this.addSilent({type:n.types.MOVE,source:e,destination:t},r)}createCopy(e,t,r){return this.addSilent({type:n.types.COPY,source:e,destination:t},r)}addSilent(e,t){return t&&(e.silent=t),e}}},76693:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.toSparqlJs=t.toSparql=void 0;const n=r(76065),a=r(22086),s=r(9619),p=r(90250),i=r(99969),o=r(14101),u=p.types,c=p.expressionTypes;let l;const y=new i.default;function f(e){d();let t=h(e=function(e){return R(e,{})}(e));return"group"===t.type?t.patterns[0]:t}function d(){l={project:!1,extend:[],group:[],aggregates:[],order:[]}}function h(e){switch(e.type!==u.EXTEND&&e.type!==u.ORDER_BY&&e.type!==u.GRAPH&&(l.project=!1),e.type){case u.EXPRESSION:return g(e);case u.ASK:return N(e,u.ASK);case u.BGP:return function(e){let t=e.patterns.map(E);return 0===t.length?null:{type:"bgp",triples:t}}(e);case u.CONSTRUCT:return function(e){return{type:"query",prefixes:{},queryType:"CONSTRUCT",template:e.template.map(E),where:o.default.flatten([h(e.input)])}}(e);case u.DESCRIBE:return N(e,u.DESCRIBE);case u.DISTINCT:return function(e){let t=h(e.input);return t.patterns[0].distinct=!0,t}(e);case u.EXTEND:return function(e){return l.project?(l.extend.push(e),h(e.input)):o.default.flatten([h(e.input),{type:"bind",variable:e.variable,expression:g(e.expression)}])}(e);case u.FROM:return function(e){const t=h(e.input);return t.patterns[0].from={default:e.default,named:e.named},t}(e);case u.FILTER:return function(e){return{type:"group",patterns:o.default.flatten([h(e.input),{type:"filter",expression:g(e.expression)}])}}(e);case u.GRAPH:return function(e){return{type:"graph",patterns:o.default.flatten([h(e.input)]),name:e.name}}(e);case u.GROUP:return function(e){const t=h(e.input),r=e.aggregates.map(b);return l.aggregates.push(...r),l.group.push(...e.variables),t}(e);case u.JOIN:return function(e){return o.default.flatten([h(e.left),h(e.right)]).reduce(((e,t)=>("bgp"!==t.type||0==e.length||"bgp"!==e[e.length-1].type?e.push(t):e[e.length-1].triples.push(...t.triples),e)),[])}(e);case u.LEFT_JOIN:return function(e){const t={type:"optional",patterns:[h(e.right)]};return e.expression&&t.patterns.push({type:"filter",expression:g(e.expression)}),t.patterns=o.default.flatten(t.patterns),o.default.flatten([h(e.left),t])}(e);case u.MINUS:return function(e){let t=h(e.right);return"group"===t.type&&(t=t.patterns),Array.isArray(t)||(t=[t]),o.default.flatten([h(e.left),{type:"minus",patterns:t}])}(e);case u.NOP:return{};case u.ORDER_BY:return function(e){return l.order.push(...e.expressions),h(e.input)}(e);case u.PATH:return function(e){return{type:"bgp",triples:[{subject:e.subject,predicate:m(e.predicate),object:e.object}]}}(e);case u.PATTERN:return E(e);case u.PROJECT:return N(e,u.PROJECT);case u.REDUCED:return function(e){let t=h(e.input);return t.patterns[0].reduced=!0,t}(e);case u.SERVICE:return function(e){let t=h(e.input);return"group"===t.type&&(t=t.patterns),Array.isArray(t)||(t=[t]),{type:"service",name:e.name,silent:e.silent,patterns:t}}(e);case u.SLICE:return function(e){let t=h(e.input),r=t;return t.type&&"group"===t.type&&(r=t.patterns[0]),0!==e.start&&(r.offset=e.start),void 0!==e.length&&(r.limit=e.length),t}(e);case u.UNION:return function(e){return{type:"union",patterns:o.default.flatten([h(e.left),h(e.right)])}}(e);case u.VALUES:return function(e){return{type:"values",values:e.bindings.map((t=>{let r={};for(let n of e.variables){let e=`?${n.value}`;t[e]?r[e]=t[e]:r[e]=void 0}return r}))}}(e);case u.COMPOSITE_UPDATE:return function(e){return{prefixes:{},type:"update",updates:e.updates.map((e=>h(e).updates[0]))}}(e);case u.DELETE_INSERT:return function(e){let t,r=e.where;if(r&&r.type===u.FROM){let n=e.where;r=n.input,t={default:n.default,named:n.named}}const a=[{updateType:"insertdelete",delete:S(e.delete),insert:S(e.insert)}];if(t&&(a[0].using=t),!r||r.type===u.BGP&&0===r.patterns.length)a[0].where=[];else{const e={};let t=h(R(r,e));"group"===t.type?a[0].where=t.patterns:a[0].where=[t];const n=Object.keys(e);if(n.length>0){if(1!==n.length)throw new Error("This is unexpected and might indicate an error in graph handling for updates.");""!==e[n[0]].graph.value&&(a[0].where=[{type:"graph",patterns:a[0].where,name:e[n[0]].graph}])}}return e.delete||e.where?e.insert||e.where?!e.insert&&e.where&&"bgp"===e.where.type&&n.isomorphic(e.delete,e.where.patterns)&&(delete a[0].where,a[0].updateType="deletewhere"):(delete a[0].insert,delete a[0].where,e.delete.some((e=>"Variable"===e.subject.termType||"Variable"===e.predicate.termType||"Variable"===e.object.termType))?a[0].updateType="deletewhere":a[0].updateType="delete"):(a[0].updateType="insert",delete a[0].delete,delete a[0].where),{prefixes:{},type:"update",updates:a}}(e);case u.LOAD:return function(e){const t=[{type:"load",silent:Boolean(e.silent),source:e.source}];return e.destination&&(t[0].destination=e.destination),{prefixes:{},type:"update",updates:t}}(e);case u.CLEAR:return function(e){return v(e,"clear")}(e);case u.CREATE:return function(e){return v(e,"create")}(e);case u.DROP:return function(e){return v(e,"drop")}(e);case u.ADD:return function(e){return P(e,"add")}(e);case u.MOVE:return function(e){return P(e,"move")}(e);case u.COPY:return function(e){return P(e,"copy")}(e)}throw new Error(`Unknown Operation type ${e.type}`)}function g(e){switch(e.expressionType){case c.AGGREGATE:return function(e){const t={expression:g(e.expression),type:"aggregate",aggregation:e.aggregator,distinct:e.distinct};return e.separator&&(t.separator=e.separator),t}(e);case c.EXISTENCE:return function(e){return{type:"operation",operator:e.not?"notexists":"exists",args:o.default.flatten([h(e.input)])}}(e);case c.NAMED:return function(e){return{type:"functionCall",function:e.name,args:e.args.map(g)}}(e);case c.OPERATOR:return function(e){if("desc"===e.operator){return{expression:g(e.args[0]),descending:!0}}const t={type:"operation",operator:e.operator,args:e.args.map(g)};return"in"!==t.operator&&"notin"!==t.operator||(t.args=[t.args[0]].concat([t.args.slice(1)])),t}(e);case c.TERM:return function(e){return e.term}(e);case c.WILDCARD:return function(e){return e.wildcard}(e)}throw new Error(`Unknown Expression Operation type ${e.expressionType}`)}function m(e){switch(e.type){case u.ALT:return function(e){const t=m(e.left),r=m(e.right);return"pathType"in t&&"!"===t.pathType&&"pathType"in r&&"!"===r.pathType?{type:"path",pathType:"!",items:[{type:"path",pathType:"|",items:[].concat(t.items,r.items)}]}:{type:"path",pathType:"|",items:[t,r]}}(e);case u.INV:return function(e){if(e.path.type===u.NPS){const t=e.path.iris.map((e=>({type:"path",pathType:"^",items:[e]})));return t.length<=1?{type:"path",pathType:"!",items:t}:{type:"path",pathType:"!",items:[{type:"path",pathType:"|",items:t}]}}return{type:"path",pathType:"^",items:[m(e.path)]}}(e);case u.LINK:return function(e){return e.iri}(e);case u.NPS:return function(e){return e.iris.length<=1?{type:"path",pathType:"!",items:e.iris}:{type:"path",pathType:"!",items:[{type:"path",pathType:"|",items:e.iris}]}}(e);case u.ONE_OR_MORE_PATH:return function(e){return{type:"path",pathType:"+",items:[m(e.path)]}}(e);case u.SEQ:return function(e){return{type:"path",pathType:"/",items:[m(e.left),m(e.right)]}}(e);case u.ZERO_OR_MORE_PATH:return function(e){return{type:"path",pathType:"*",items:[m(e.path)]}}(e);case u.ZERO_OR_ONE_PATH:return function(e){return{type:"path",pathType:"?",items:[m(e.path)]}}(e)}throw new Error(`Unknown Path type ${e.type}`)}function T(e){return a.termToString(e)}function b(e){return e}function E(e){return{subject:e.subject,predicate:e.predicate,object:e.object}}function O(e,t){let r=o.default.isSimpleTerm(e)?T(e):e;if("string"==typeof r){if(t[r])return t[r]}else if(Array.isArray(e))e=e.map((e=>O(e,t)));else for(let r of Object.keys(e))e[r]=O(e[r],t);return e}function N(e,t){const r={type:"query",prefixes:{}},n=r;let a;t===u.PROJECT?(r.queryType="SELECT",a=e.variables):t===u.ASK?r.queryType="ASK":t===u.DESCRIBE&&(r.queryType="DESCRIBE",a=e.terms);const p=l.extend,i=l.group,c=l.aggregates,y=l.order;d(),l.project=!0;let f=o.default.flatten([h(e.input)]);1===f.length&&"group"===f[0].type&&(f=f[0].patterns),r.where=f;let m={};for(let e of l.aggregates)m[T(e.variable)]=g(e);let b={};for(let e=l.extend.length-1;e>=0;--e){let t=l.extend[e];b[T(t.variable)]=O(g(t.expression),m)}if(l.group.length>0&&(n.group=l.group.map((e=>{let t=T(e);if(b[t]){let r=b[t];return delete b[t],{variable:e,expression:r}}return{expression:e}}))),l.order.length>0&&(n.order=l.order.map(h).map((e=>e.descending?e:{expression:e}))),a&&(n.variables=a.map((e=>{let t=T(e);return b[t]?{variable:e,expression:b[t]}:e})),0===n.variables.length&&(n.variables=[new s.Wildcard])),r.where.length>0&&"filter"===r.where[r.where.length-1].type){const e=r.where[r.where.length-1];j(e,Object.keys(m))&&(n.having=o.default.flatten([O(e.expression,m)]),r.where.splice(-1))}return l.extend=p,l.group=i,l.aggregates=c,l.order=y,{type:"group",patterns:[n]}}function j(e,t){return o.default.isSimpleTerm(e)?t.indexOf(T(e))>=0:Array.isArray(e)?e.some((e=>j(e,t))):e===Object(e)?Object.keys(e).some((r=>j(e[r],t))):t.indexOf(e)>=0}function v(e,t){const r=[{type:t,silent:Boolean(e.silent)}];return"DEFAULT"===e.source?r[0].graph={default:!0}:"NAMED"===e.source?r[0].graph={named:!0}:"ALL"===e.source?r[0].graph={all:!0}:r[0].graph={type:"graph",name:e.source},{prefixes:{},type:"update",updates:r}}function P(e,t){const r=[{type:t,silent:Boolean(e.silent)}];return r[0].source="DEFAULT"===e.source?{type:"graph",default:!0}:{type:"graph",name:e.source},r[0].destination="DEFAULT"===e.destination?{type:"graph",default:!0}:{type:"graph",name:e.destination},{prefixes:{},type:"update",updates:r}}function S(e){if(!e)return[];const t={};return e.forEach((e=>{const r=e.graph.value;t[r]||(t[r]=[]),t[r].push(e)})),Object.keys(t).map((e=>""===e?{type:"bgp",triples:t[e].map(E)}:{type:"graph",triples:t[e].map(E),name:t[e][0].graph}))}function R(e,t){if(Array.isArray(e))return e.map((e=>R(e,t)));if(!e.type)return e;if(e.type===u.DELETE_INSERT)return e;if((e.type===u.PATTERN||e.type===u.PATH)&&e.graph)return t[e.graph.value]||(t[e.graph.value]={graph:e.graph,values:[]}),t[e.graph.value].values.push(e),e;const r={},n={},a={};for(let t of Object.keys(e)){const s={};r[t]=R(e[t],s);const p=Object.keys(s);if(p.length>1){let e=A(s[p[0]].values);for(let t=1;t<p.length;++t){const r=A(s[p[t]].values);e=y.createJoin(e,r)}return p.map((e=>delete s[e])),e}if(1===p.length){const e=s[p[0]].graph;n[t]=e,a[e.value]=e}}const s=Object.keys(a);if(s.length>0)if(1===s.length&&e.type!==u.PROJECT)t[s[0]]={graph:a[s[0]],values:[r]};else for(let e of Object.keys(n))n[e].value.length>0&&(r[e]=y.createGraph(r[e],n[e]));return r}function A(e){const t=y.createBgp(e),r=e[0].graph;return 0===r.value.length?t:y.createGraph(t,r)}t.toSparql=function(e,t={}){return new s.Generator(t).stringify(f(e))},t.toSparqlJs=f},11183:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(64063),a=r(22086),s=r(90250),p=r(99969),i=r(14101),o=r(9619).Parser,u=s.types;let c,l=new Set,y=0,f=!1;function d(e,t,r){if(l=new Set,y=0,f=t,!e.type)return c.createNop();if("query"!==e.type&&"update"!==e.type)throw new Error("Translate only works on complete query or update objects.");const n=new Set(Object.keys(g(e)).map(c.createTerm.bind(c)));let a;var s;return"query"===e.type?(a=m({type:"group",patterns:e.where||[]}),a=function(e,t,r){const n=e,a=[],s={};if(n.variables=n.variables&&n.variables.map((e=>A(e,s))),n.having=n.having&&n.having.map((e=>A(e,s))),n.order=n.order&&n.order.map((e=>A(e,s))),n.group||Object.keys(s).length>0){const e=Object.keys(s).map((e=>function(e,t){if("aggregate"!==e.type||!e.aggregation)throw new Error(`Unexpected input: ${JSON.stringify(e)}`);const r=T(e);return r.variable=t,r}(s[e],c.createTerm(e)))),r=[];if(n.group)for(const e of n.group)if(i.default.isSimpleTerm(e.expression))r.push(e.expression);else{const n="variable"in e?e.variable:O();t=c.createExtend(t,n,T(e.expression)),r.push(n)}t=c.createGroup(t,r,e)}if(n.having)for(let e of n.having)t=c.createFilter(t,T(e));e.values&&(t=c.createJoin(t,R(e)));let p=new Set;if("SELECT"===e.queryType||"DESCRIBE"===e.queryType)if(e.variables.some((e=>e&&i.default.isWildcard(e))))p=r;else for(let t of e.variables)h(t)||!("variable"in t)?p.add(t):t.variable&&(p.add(t.variable),a.push(t));for(let e of a)t=c.createExtend(t,e.variable,T(e.expression));return n.order&&(t=c.createOrderBy(t,n.order.map((e=>{let t=T(e.expression);return e.descending&&(t=c.createOperatorExpression(u.DESC,[t])),t})))),"SELECT"===e.queryType&&(t=c.createProject(t,Array.from(p))),n.distinct&&(t=c.createDistinct(t)),n.reduced&&(t=c.createReduced(t)),"CONSTRUCT"===e.queryType?t=c.createConstruct(t,e.template.map(N)):"ASK"===e.queryType?t=c.createAsk(t):"DESCRIBE"===e.queryType&&(t=c.createDescribe(t,Array.from(p))),(n.offset||n.limit)&&(t=c.createSlice(t,n.offset,n.limit)),n.from&&(t=c.createFrom(t,n.from.default,n.from.named)),t}(e,a,n)):"update"===e.type&&(a=1===(s=e).updates.length?x(s.updates[0]):c.createCompositeUpdate(s.updates.map(x))),r&&(a=w(a,n)),a}function h(e){return"Variable"===(null==e?void 0:e.termType)}function g(e){let t={};if(h(e))t[a.termToString(e)]=!0,l.add(e.value);else if(null!==(r=e)&&"object"==typeof r)if("bind"===e.type)g(e.expression),Object.assign(t,g(e.variable));else if("SELECT"===e.queryType){let r=g(e.where);for(let n of e.variables)i.default.isWildcard(n)?Object.assign(t,r):n.variable?Object.assign(t,g(n.variable)):Object.assign(t,g(n));if(e.group)for(let r of e.group)Object.assign(t,g(r))}else for(let r of Object.keys(e))Object.assign(t,g(e[r]));var r;return t}function m(e){let t,r=[],n=[];if("patterns"in e)for(let t of e.patterns)("filter"===t.type?r:n).push(t);if("bgp"===e.type)return function(e){let t=[],r=[];for(let a of e.triples)if("pathType"in a.predicate){let e=E((n=a).subject,b(n.predicate),n.object);for(let n of e)n.type===u.PATH?(t.length>0&&r.push(c.createBgp(t)),t=[],r.push(n)):t.push(n)}else t.push(N(a));var n;return t.length>0&&r.push(c.createBgp(t)),1===r.length?r[0]:r.reduce(((e,t)=>c.createJoin(e,t)))}(e);if("union"===e.type)t=n.map((e=>("group"!==e.type&&(e={type:"group",patterns:[e]}),m(e)))).reduce(((e,t)=>c.createUnion(e,t)));else{if("graph"===e.type)return function(e){let t=m({type:"group",patterns:e.patterns});return t=f?v(t,e.name):c.createGraph(t,e.name),t}(e);if("group"===e.type)t=n.reduce(P,c.createBgp([]));else if("values"===e.type)t=R(e);else{if("query"!==e.type)throw new Error(`Unexpected type: ${e.type}`);t=d(e,f,!1)}}if(r.length>0){let e=r.map((e=>T(e.expression)));e.length>0&&(t=c.createFilter(t,e.reduce(((e,t)=>c.createOperatorExpression("&&",[e,t])))))}return t}function T(e){if(i.default.isSimpleTerm(e)||i.default.isQuad(e))return c.createTermExpression(e);if(i.default.isWildcard(e))return c.createWildcardExpression();if("aggregation"in e)return c.createAggregateExpression(e.aggregation,T(e.expression),e.distinct,e.separator);if("function"in e)return c.createNamedExpression(e.function,e.args.map(T));if("operator"in e)return"exists"===e.operator||"notexists"===e.operator?c.createExistenceExpression("notexists"===e.operator,m(e.args[0])):("in"!==e.operator&&"notin"!==e.operator||(e.args=[e.args[0]].concat(e.args[1])),c.createOperatorExpression(e.operator,e.args.map(T)));throw new Error(`Unknown expression: ${JSON.stringify(e)}`)}function b(e){if(i.default.isSimpleTerm(e)){if("NamedNode"===e.termType)return c.createLink(e);throw new Error(`Path predicate should be a NamedNode, got ${JSON.stringify(e)}`)}if("^"===e.pathType)return c.createInv(b(e.items[0]));if("!"===e.pathType){let t,r=[],n=[];t="pathType"in e.items[0]&&"|"===e.items[0].pathType?e.items[0].items:e.items;for(let e of t)if(i.default.isSimpleTerm(e))r.push(e);else{if("^"!==e.pathType)throw new Error(`Unexpected item: ${JSON.stringify(e)}`);n.push(e.items[0])}let a=c.createNps(r),s=c.createInv(c.createNps(n));return 0===n.length?a:0===r.length?s:c.createAlt(a,s)}if("/"===e.pathType)return e.items.map(b).reduce(((e,t)=>c.createSeq(e,t)));if("|"===e.pathType)return e.items.map(b).reduce(((e,t)=>c.createAlt(e,t)));if("*"===e.pathType)return c.createZeroOrMorePath(b(e.items[0]));if("+"===e.pathType)return c.createOneOrMorePath(b(e.items[0]));if("?"===e.pathType)return c.createZeroOrOnePath(b(e.items[0]));throw new Error(`Unable to translate path expression ${JSON.stringify(e)}`)}function E(e,t,r){if(t.type===u.LINK)return[c.createPattern(e,t.iri,r)];if(t.type===u.INV)return E(r,t.path,e);if(t.type===u.SEQ){let n=O(),a=E(e,t.left,n),s=E(n,t.right,r);return a.concat(s)}return[c.createPath(e,t,r)]}function O(){let e="?var"+y++;return l.has(e)?O():(l.add(e),c.createTerm(e))}function N(e){return c.createPattern(e.subject,e.predicate,e.object,e.graph)}t.default=function(e,t){let r;if(t=t||{},c=new p.default(t.dataFactory),"string"==typeof e){let n=new o(t);n._resetBlanks(),r=n.parse(e)}else r=e;return d(r,t.quads,t.blankToVariable)};let j=Object.values(u);function v(e,t,r){if(e.type===u.GRAPH){if(r)throw new Error("Recursing through nested GRAPH statements with a replacement is impossible.");const t=e;e=v(t.input,t.name)}else if(e.type===u.BGP)e.patterns=e.patterns.map((e=>(r&&(e.subject.equals(t)&&(e.subject=r),e.predicate.equals(t)&&(e.predicate=r),e.object.equals(t)&&(e.object=r)),"DefaultGraph"===e.graph.termType&&(e.graph=t),e)));else if(e.type===u.PATH){const n=e;r&&(n.subject.equals(t)&&(n.subject=r),n.object.equals(t)&&(n.object=r)),"DefaultGraph"===e.graph.termType&&(e.graph=t)}else if(e.type!==u.PROJECT||r)if(e.type!==u.EXTEND||r)for(let n of Object.keys(e))Array.isArray(e[n])?e[n]=e[n].map((e=>v(e,t,r))):j.indexOf(e[n].type)>=0?e[n]=v(e[n],t,r):r&&h(e[n])&&e[n].equals(t)&&(e[n]=r);else{const n=e;n.variable.equals(t)&&(r=O()),n.input=v(n.input,t,r)}else{const n=e;n.variables.some((e=>e.equals(t)))||(r=O()),n.input=v(n.input,t,r)}return e}function P(e,t){if("optional"===t.type){const r=m({type:"group",patterns:t.patterns});if(r.type===u.FILTER){const t=r;e=c.createLeftJoin(e,t.input,t.expression)}else e=c.createLeftJoin(e,r)}else if("minus"===t.type){const r=m({type:"group",patterns:t.patterns});e=c.createMinus(e,r)}else if("bind"===t.type)e=c.createExtend(e,t.variable,T(t.expression));else if("service"===t.type){const r={type:"group",patterns:t.patterns};e=S(e,c.createService(m(r),t.name,t.silent))}else e=S(e,m(t));return e}function S(e,t){return e.type===u.BGP&&t.type===u.BGP?e=c.createBgp([].concat(e.patterns,t.patterns)):e.type===u.BGP&&0===e.patterns.length?e=t:t.type===u.BGP&&0===t.patterns.length||(e=c.createJoin(e,t)),e}function R(e){let t=(0===e.values.length?[]:Object.keys(e.values[0])).map(c.createTerm.bind(c)),r=e.values.map((e=>{let t=Object.keys(e);t=t.filter((t=>void 0!==e[t]));let r={};for(let n of t)r[n]=e[n];return r}));return c.createValues(t,r)}function A(e,t){if("type"in e&&"aggregate"===e.type){let r,s=!1;for(let a of Object.keys(t))if(n(t[a],e)){r=c.createTerm(a),s=!0;break}return s||(r=O(),t[a.termToString(r)]=e),r}return"expression"in e&&e.expression?Object.assign(Object.assign({},e),{expression:A(e.expression,t)}):"args"in e&&e.args?Object.assign(Object.assign({},e),{args:e.args.map((e=>A(e,t)))}):e}function x(e){if("type"in e){if("load"===e.type)return function(e){return c.createLoad(e.source,e.destination,e.silent)}(e);if("clear"===e.type||"create"===e.type||"drop"===e.type)return function(e){let t;switch(t=i.default.isSimpleTerm(e.graph)?e.graph:e.graph.all?"ALL":e.graph.default?"DEFAULT":e.graph.named?"NAMED":e.graph.name,e.type){case"clear":return c.createClear(t,e.silent);case"create":return c.createCreate(t,e.silent);case"drop":return c.createDrop(t,e.silent)}}(e);if("add"===e.type||"copy"===e.type||"move"===e.type)return function(e){const t=e.source.default?"DEFAULT":e.source.name,r=e.destination.default?"DEFAULT":e.destination.name;switch(e.type){case"copy":return c.createCopy(t,r,e.silent);case"move":return c.createMove(t,r,e.silent);case"add":return c.createAdd(t,r,e.silent)}}(e)}else if("insertdelete"===e.updateType||"deletewhere"===e.updateType||"delete"===e.updateType||"insert"===e.updateType)return function(e){if(!f)throw new Error("INSERT/DELETE operations are only supported with quads option enabled");let t,r=[],n=[];if(e.delete&&(r=i.default.flatten(e.delete.map((t=>_(t,e.graph))))),e.insert&&(n=i.default.flatten(e.insert.map((t=>_(t,e.graph))))),e.where&&e.where.length>0){t=m({type:"group",patterns:e.where});const r=e.using;r?t=c.createFrom(t,r.default,r.named):e.graph&&(t=v(t,e.graph))}else"deletewhere"===e.updateType&&r.length>0&&(t=c.createBgp(r));return c.createDeleteInsert(r.length>0?r:void 0,n.length>0?n:void 0,t)}(e);throw new Error(`Unknown update type ${JSON.stringify(e)}`)}function _(e,t){let r=t;"graph"===e.type&&(r=e.name);let n=e.triples;return r&&(n=n.map((e=>Object.assign(e,{graph:r})))),n.map(N)}function w(e,t){const r={},n=Array.from(t).reduce(((e,t)=>(e[t.value]=!0,e)),{});return i.default.mapOperation(e,{[s.types.DELETE_INSERT]:e=>({result:e,recurse:!1}),[s.types.PATH]:(e,t)=>({result:t.createPath(a(e.subject),e.predicate,a(e.object),a(e.graph)),recurse:!1}),[s.types.PATTERN]:(e,t)=>({result:t.createPattern(a(e.subject),a(e.predicate),a(e.object),a(e.graph)),recurse:!1}),[s.types.CONSTRUCT]:e=>({result:c.createConstruct(w(e.input,t),e.template),recurse:!1})});function a(e){if("BlankNode"===e.termType){let t=r[e.value];return t||(t=i.default.createUniqueVariable(e.value,n,c.dataFactory),n[t.value]=!0,r[e.value]=t),t}return e}}},14101:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(90250),a=r(99969);class s{static flatten(e){return Array.prototype.concat(...e).filter((e=>e))}static objectify(e){if(e.termType){if("Quad"===e.termType)return{type:"pattern",termType:"Quad",value:"",subject:s.objectify(e.subject),predicate:s.objectify(e.predicate),object:s.objectify(e.object),graph:s.objectify(e.graph)};{let t={termType:e.termType,value:e.value};return e.language&&(t.language=e.language),e.datatype&&(t.datatype=s.objectify(e.datatype)),t}}if(Array.isArray(e))return e.map((e=>s.objectify(e)));if(e===Object(e)){let t={};for(let r of Object.keys(e))t[r]=s.objectify(e[r]);return t}return e}static inScopeVariables(e){const t=[];function r(e){t.find((t=>e.value===t.value))||t.push(e)}function a(e){"Variable"===e.subject.termType&&r(e.subject),"Variable"===e.predicate.termType&&r(e.predicate),"Variable"===e.object.termType&&r(e.object),"Variable"===e.graph.termType&&r(e.graph),"Quad"===e.subject.termType&&a(e.subject),"Quad"===e.predicate.termType&&a(e.predicate),"Quad"===e.object.termType&&a(e.object),"Quad"===e.graph.termType&&a(e.graph)}return s.recurseOperation(e,{[n.types.EXPRESSION]:e=>{let t=e;return t.expressionType===n.expressionTypes.AGGREGATE&&t.variable&&r(t.variable),!0},[n.types.EXTEND]:e=>(r(e.variable),!0),[n.types.GRAPH]:e=>{let t=e;return"Variable"===t.name.termType&&r(t.name),!0},[n.types.GROUP]:e=>(e.variables.forEach(r),!0),[n.types.PATH]:e=>{let t=e;return"Variable"===t.subject.termType&&r(t.subject),"Variable"===t.object.termType&&r(t.object),"Variable"===t.graph.termType&&r(t.graph),"Quad"===t.subject.termType&&a(t.subject),"Quad"===t.object.termType&&a(t.object),"Quad"===t.graph.termType&&a(t.graph),!0},[n.types.PATTERN]:e=>(a(e),!0),[n.types.PROJECT]:e=>(e.variables.forEach(r),!1),[n.types.SERVICE]:e=>{let t=e;return"Variable"===t.name.termType&&r(t.name),!0},[n.types.VALUES]:e=>(e.variables.forEach(r),!0)}),t}static recurseOperation(e,t){let r=e,a=!0;if(t[e.type]&&(a=t[e.type](e)),!a)return;let p=e=>s.recurseOperation(e,t);switch(r.type){case n.types.ALT:const e=r;p(e.left),p(e.right);break;case n.types.ASK:p(r.input);break;case n.types.BGP:r.patterns.forEach(p);break;case n.types.CONSTRUCT:const t=r;p(t.input),t.template.map(p);break;case n.types.DESCRIBE:case n.types.DISTINCT:p(r.input);break;case n.types.EXPRESSION:const a=r;a.expressionType===n.expressionTypes.EXISTENCE&&p(a.input);break;case n.types.EXTEND:const s=r;p(s.input),p(s.expression);break;case n.types.FILTER:const i=r;p(i.input),p(i.expression);break;case n.types.FROM:case n.types.GRAPH:p(r.input);break;case n.types.GROUP:const o=r;p(o.input),o.aggregates.forEach(p);break;case n.types.INV:p(r.path);break;case n.types.JOIN:const u=r;p(u.left),p(u.right);break;case n.types.LEFT_JOIN:const c=r;p(c.left),p(c.right),c.expression&&p(c.expression);break;case n.types.LINK:break;case n.types.MINUS:const l=r;p(l.left),p(l.right);break;case n.types.NOP:case n.types.NPS:break;case n.types.ONE_OR_MORE_PATH:p(r.path);break;case n.types.ORDER_BY:const y=r;p(y.input),y.expressions.forEach(p);break;case n.types.PATH:p(r.predicate);break;case n.types.PATTERN:break;case n.types.PROJECT:case n.types.REDUCED:p(r.input);break;case n.types.SEQ:const f=r;p(f.left),p(f.right);break;case n.types.SERVICE:case n.types.SLICE:p(r.input);break;case n.types.UNION:const d=r;p(d.left),p(d.right);break;case n.types.VALUES:break;case n.types.ZERO_OR_MORE_PATH:case n.types.ZERO_OR_ONE_PATH:p(r.path);break;case n.types.COMPOSITE_UPDATE:r.updates.forEach((e=>p(e)));break;case n.types.DELETE_INSERT:const h=r;h.delete&&h.delete.forEach((e=>p(e))),h.insert&&h.insert.forEach((e=>p(e))),h.where&&p(h.where);break;case n.types.LOAD:case n.types.CLEAR:case n.types.CREATE:case n.types.DROP:case n.types.ADD:case n.types.MOVE:case n.types.COPY:break;default:throw new Error(`Unknown Operation type ${r.type}`)}}static mapOperation(e,t,r){let p=e,i=!0;if(r=r||new a.default,t[e.type]&&({result:p,recurse:i}=t[e.type](e,r)),!i)return p;let o=e=>s.mapOperation(e,t,r);switch(p.type){case n.types.ALT:const e=p;return r.createAlt(o(e.left),o(e.right));case n.types.ASK:const a=p;return r.createAsk(o(a.input));case n.types.BGP:const i=p;return r.createBgp(i.patterns.map(o));case n.types.CONSTRUCT:const u=p;return r.createConstruct(o(u.input),u.template.map(o));case n.types.DESCRIBE:const c=p;return r.createDescribe(o(c.input),c.terms);case n.types.DISTINCT:const l=p;return r.createDistinct(o(l.input));case n.types.EXPRESSION:const y=p;return s.mapExpression(y,t,r);case n.types.EXTEND:const f=p;return r.createExtend(o(f.input),f.variable,o(f.expression));case n.types.FILTER:const d=p;return r.createFilter(o(d.input),o(d.expression));case n.types.FROM:const h=p;return r.createFrom(o(h.input),[].concat(h.default),[].concat(h.named));case n.types.GRAPH:const g=p;return r.createGraph(o(g.input),g.name);case n.types.GROUP:const m=p;return r.createGroup(o(m.input),[].concat(m.variables),m.aggregates.map(o));case n.types.INV:const T=p;return r.createInv(o(T.path));case n.types.JOIN:const b=p;return r.createJoin(o(b.left),o(b.right));case n.types.LEFT_JOIN:const E=p;return r.createLeftJoin(o(E.left),o(E.right),E.expression?o(E.expression):void 0);case n.types.LINK:const O=p;return r.createLink(O.iri);case n.types.MINUS:const N=p;return r.createMinus(o(N.left),o(N.right));case n.types.NOP:return r.createNop();case n.types.NPS:const j=p;return r.createNps([].concat(j.iris));case n.types.ONE_OR_MORE_PATH:const v=p;return r.createOneOrMorePath(o(v.path));case n.types.ORDER_BY:const P=p;return r.createOrderBy(o(P.input),P.expressions.map(o));case n.types.PATH:const S=p;return r.createPath(S.subject,o(S.predicate),S.object,S.graph);case n.types.PATTERN:const R=p;return r.createPattern(R.subject,R.predicate,R.object,R.graph);case n.types.PROJECT:const A=p;return r.createProject(o(A.input),[].concat(A.variables));case n.types.REDUCED:const x=p;return r.createReduced(o(x.input));case n.types.SEQ:const _=p;return r.createSeq(o(_.left),o(_.right));case n.types.SERVICE:const w=p;return r.createService(o(w.input),w.name,w.silent);case n.types.SLICE:const D=p;return r.createSlice(o(D.input),D.start,D.length);case n.types.UNION:const k=p;return r.createUnion(o(k.left),o(k.right));case n.types.VALUES:const I=p;return r.createValues([].concat(I.variables),I.bindings.map((e=>Object.assign({},e))));case n.types.ZERO_OR_MORE_PATH:const C=p;return r.createZeroOrMorePath(o(C.path));case n.types.ZERO_OR_ONE_PATH:const L=p;return r.createZeroOrOnePath(o(L.path));case n.types.COMPOSITE_UPDATE:const M=p;return r.createCompositeUpdate(M.updates.map(o));case n.types.DELETE_INSERT:const G=p;return r.createDeleteInsert(G.delete?G.delete.map(o):void 0,G.insert?G.insert.map(o):void 0,G.where?o(G.where):void 0);case n.types.LOAD:const q=p;return r.createLoad(q.source,q.destination,q.silent);case n.types.CLEAR:const B=p;return r.createClear(B.source,B.silent);case n.types.CREATE:const U=p;return r.createCreate(U.source,U.silent);case n.types.DROP:const V=p;return r.createDrop(V.source,V.silent);case n.types.ADD:const Q=p;return r.createAdd(Q.source,Q.destination);case n.types.MOVE:const F=p;return r.createMove(F.source,F.destination);case n.types.COPY:const J=p;return r.createCopy(J.source,J.destination);default:throw new Error(`Unknown Operation type ${p.type}`)}}static mapExpression(e,t,r){let a=e=>s.mapOperation(e,t,r);switch(e.expressionType){case n.expressionTypes.AGGREGATE:if(e.variable){const t=e;return r.createBoundAggregate(t.variable,t.aggregator,a(t.expression),t.distinct,t.separator)}const t=e;return r.createAggregateExpression(t.aggregator,a(t.expression),t.distinct,t.separator);case n.expressionTypes.EXISTENCE:const s=e;return r.createExistenceExpression(s.not,a(s.input));case n.expressionTypes.NAMED:const p=e;return r.createNamedExpression(p.name,p.args.map(a));case n.expressionTypes.OPERATOR:const i=e;return r.createOperatorExpression(i.operator,i.args.map(a));case n.expressionTypes.TERM:const o=e;return r.createTermExpression(o.term);case n.expressionTypes.WILDCARD:return r.createWildcardExpression();default:throw new Error(`Unknown Expression type ${e.expressionType}`)}}static createUniqueVariable(e,t,r){let n=0,a=e;for(;t[a];)a=`${e}${n++}`;return r.variable(a)}static isSimpleTerm(e){return void 0!==e.termType&&"Quad"!==e.termType&&"Wildcard"!==e.termType}static isQuad(e){return"Quad"===e.termType}static isWildcard(e){return"Wildcard"===e.termType}}t.default=s}}]);